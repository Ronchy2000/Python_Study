'''
描述
对于给定的整数n，从小到大依次输出它的全部质因子。
即找到这样的质数p1,p2,⋯,pk，使得n=p1×p2×⋯×pk。

输入描述：
在一行上输入一个整数n(2≦n≦2×10^8+14)代表待分解的整数。

输出描述：
在一行上从小到大输出若干个整数，代表n的质因子。
'''


"""
- 从最小的质数2开始尝试整除n
- 如果n能被i整除，则i是n的一个质因子，输出i，并将n除以i
- 如果n不能被i整除，则i增加1，继续尝试
- 重复步骤2和3，直到i的平方大于n
- 最后，如果n大于1，则n本身是一个质数，也是原始输入的一个质因子
"""

def is_prime(n):
    if n <= 1:
        return False
    i = 2 # 从2开始判断
    while i ** 2  <= n: # 只需要检查到sqrt(n)
        if n % i:
            i += 1
        else:
            print(i, end=' ')
            n = n // i

    if n > 1: # 如果n最后大于1，说明n本身是一个质数
        print(n,end ="")
    else:
        print('', end='') # 删除最后一个空格
            

if __name__ == '__main__':
    num = int (input().strip() )
    is_prime(num)